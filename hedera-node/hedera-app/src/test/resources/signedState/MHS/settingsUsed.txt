Swirlds browser v. 0.36.1 (commit: )
(c)2016-2022 Swirlds Inc
This is an early alpha version.
The Swirldsâ„¢ software is covered by one or more patents
(see www.swirlds.com/ip). The browser is free to download,
to experiment with, and to test in building apps. To deploy
or use those apps, contact sales@swirlds.com

The following are all the settings, as modified by settings.txt, but not reflecting any changes made by config.txt.

/Users/michaeltinker/YetYetAnotherDev/hedera-services/hedera-node/log4j2.xml = logPath
           true = verifyEventSigs
             32 = numCryptoThreads
           true = showInternalStats
          false = verboseStatistics
          false = requireStateLoad
              1 = signedStateFreq
           1000 = maxEventQueueForCons
         100000 = throttleTransactionQueueSize
             40 = numConnections
              1 = maxOutgoingSyncs
              1 = maxIncomingSyncsInc
           8192 = bufferSize
             -1 = socketIpTos
           10.0 = halfLife
           true = logStack
           true = useTLS
          false = doUpnp
          false = useLoopbackIp
           true = tcpNoDelay
           5000 = timeoutSyncClientSocket
           5000 = timeoutSyncClientConnect
           5000 = timeoutServerAcceptConnect
           1000 = deadlockCheckPeriod
            200 = delayShuffle
             30 = callerSkipsBeforeSleep
             50 = sleepCallerSkips
            100 = statsBufferSize
           63.0 = statsRecentSeconds
           60.0 = statsSkipSeconds
              5 = threadPrioritySync
           6144 = transactionMaxBytes
           1024 = maxAddressSizeAllowed
             10 = freezeSecondsAfterStartup
          false = loadKeysFromPfxFiles
         245760 = maxTransactionBytesPerEvent
         245760 = maxTransactionCountPerEvent
           true = transThrottle
                = csvOutputFolder
          false = disableMetricsOutput
   MainNetStats = csvFileName
emergencyRecovery.yaml = emergencyStateFileName
/Users/michaeltinker/YetYetAnotherDev/hedera-services/hedera-node/data/saved = emergencyRecoveryFileLoadDir
           3000 = csvWriteFrequency
          false = csvAppend
          false = prometheusEndpointEnabled
           9999 = prometheusEndpointPortNumber
              1 = prometheusEndpointMaxBacklogAllowed
           1000 = eventIntakeQueueThrottleSize
          10000 = eventIntakeQueueSize
           true = checkSignedStateFromDisk
              0 = randomEventProbability
              5 = staleEventPreventionThreshold
             10 = rescueChildlessInverseProbability
          false = runPauseCheckTimer
          false = enableEventStreaming
            500 = eventStreamQueueCapacity
             60 = eventsLogPeriod
 ./eventstreams = eventsLogDir
              0 = threadDumpPeriodMs
data/threadDump = threadDumpLogDir
           1000 = JVMPauseDetectorSleepMs
           1000 = JVMPauseReportMs
          false = gossipWithDifferentVersions
     data/saved = state.savedStateDirectory
          false = state.cleanSavedStateDirectory
             20 = state.stateSavingQueueSize
            300 = state.saveStatePeriod
              3 = state.signedStateDisk
             26 = state.roundsToKeepForSigning
           true = state.dumpStateOnFatal
          21600 = state.secondsBetweenISSDumps
          false = state.dumpStateOnAnyISS
          false = state.haltOnAnyIss
            300 = state.secondsBetweenIssLogs
          false = state.automatedSelfIssRecovery
          false = state.haltOnCatastrophicIss
          false = state.backgroundHashChecking
              5 = state.debugHashDepth
             60 = state.stateDeletionErrorLogFrequencySeconds
           true = state.enableHashStreamLogging
          false = state.signedStateSentinelEnabled
           PT5M = state.suspiciousSignedStateAge
           1000 = state.maxAgeOfFutureStateSignatures
           true = reconnect.active
             -1 = reconnect.reconnectWindowSeconds
            0.5 = reconnect.fallenBehindThreshold
            100 = reconnect.asyncOutputStreamFlushMilliseconds
          10000 = reconnect.asyncStreamBufferSize
           true = reconnect.asyncStreams
             10 = reconnect.maxAckDelayMilliseconds
             10 = reconnect.maximumReconnectFailuresBeforeShutdown
          PT10M = reconnect.minimumTimeBetweenReconnects
            200 = fcHashMap.maximumGCQueueSize
           PT1M = fcHashMap.gcQueueThresholdPeriod
           true = fcHashMap.archiveEnabled
              7 = fcHashMap.rebuildSplitFactor
             10 = fcHashMap.rebuildThreadCount
             -1 = virtualMap.numHashThreads
           50.0 = virtualMap.percentHashThreads
             -1 = virtualMap.numCleanerThreads
           25.0 = virtualMap.percentCleanerThreads
     2147483647 = virtualMap.maximumVirtualMapSize
        5000000 = virtualMap.virtualMapWarningThreshold
         100000 = virtualMap.virtualMapWarningInterval
             20 = virtualMap.flushInterval
              2 = virtualMap.preferredFlushQueueSize
         PT0.2S = virtualMap.flushThrottleStepSize
           PT5S = virtualMap.maximumFlushThrottlePeriod
            100 = merkleDb.MAX_NUMBER_OF_SAVES_BEFORE_MERGE
      500000000 = merkleDb.maxNumOfKeys
              0 = merkleDb.internalHashesRamToDiskThreshold
              0 = merkleDb.hashesRamToDiskThreshold
         500000 = merkleDb.moveListChunkSize
             10 = merkleDb.maxRamUsedForMergingGb
        1048576 = merkleDb.iteratorInputBufferBytes
        4194304 = merkleDb.writerOutputBufferBytes
    68719476736 = merkleDb.maxDataFileBytes
             64 = merkleDb.maxNumberOfFilesInMerge
              8 = merkleDb.minNumberOfFilesInCompaction
          false = merkleDb.reconnectKeyLeakMitigationEnabled
             10 = merkleDb.keySetBloomFilterHashCount
     2147483648 = merkleDb.keySetBloomFilterSizeInBytes
     1000000000 = merkleDb.keySetHalfDiskHashMapSize
        1000000 = merkleDb.keySetHalfDiskHashMapBuffer
          false = merkleDb.indexRebuildingEnforced
        1048576 = merkleDb.leafRecordCacheSize
           true = chatter.useChatter
             40 = chatter.attemptedChatterEventPerSecond
            0.5 = chatter.chatteringCreationThreshold
             20 = chatter.chatterIntakeThrottle
           PT2S = chatter.otherEventDelay
           1500 = chatter.selfEventQueueCapacity
          45000 = chatter.otherEventQueueCapacity
          45000 = chatter.descriptorQueueCapacity
         PT0.1S = chatter.processingTimeInterval
           PT1S = chatter.heartbeatInterval
         100000 = chatter.futureGenerationLimit
             50 = chatter.criticalQuorumSoftening
