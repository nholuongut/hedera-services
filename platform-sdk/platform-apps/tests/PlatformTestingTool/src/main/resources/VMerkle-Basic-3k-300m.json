{
  "payloadConfig": {
	"appendSig": true,
	"insertSeq": true,
	"variedSize": false,
	"waitForSaveStateDuringFreeze": true,
	"_comment": "payload type TYPE_RANDOM_BYTES for random bytes",
	"type": "TYPE_VIRTUAL_MERKLE_TEST",
	"payloadByteSize": 100,
	"maxByteSize": 100
  },
  "submitConfig": {
	"_comment0": [
	  "0,  BYTES_PER_SECOND_PER_NODE",
	  "1,  TRANS_PER_SECOND_PER_NODE",
	  "2,  EVENTS_PER_SECOND_WHOLE_NETWORK",
	  "hard to control and achieve",
	  "3,  ROUNDS_PER_SECOND_WHOLE_NETWORK",
	  "4,  TRANS_PER_EVENT_WHOLE_NETWORK",
	  "more like low bound",
	  "5,  C2C_LATENCY"
	],
	"systemMetric": "TRANS_PER_SECOND_PER_NODE",
	"metricThreshold": 3000.0,
	"_comment1": "pause after submit defined amount of transactions",
	"pauseAfter": 0,
	"pauseSeconds": 30,
	"allowRunSubmit": true,
	"C2CDelayThreshold": 6
  },
  "virtualMerkleConfig": {
	"samplingProbability": 0.17,
	"assorted": false,
	"sequential": [
	  {
		"type": "TYPE_VIRTUAL_MERKLE_CREATE",
		"amount": 2000000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_DELETE",
		"amount": 600000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_UPDATE",
		"amount": 1000000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_CREATE",
		"amount": 20000000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_DELETE",
		"amount": 6000000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_CREATE",
		"amount": 14000000
	  },
	  {
		"type": "TYPE_VIRTUAL_MERKLE_UPDATE",
		"amount": 10000000
	  }
	]
  },
  "fcmConfig": {
	"sequentialTest": false,
	"_comment": "if sequentialTest is true, generate payload according to sequentialType, sequentialAmoutn, sequentialSize, this override typeDistribution defined in payloadConfig",
	"sequentials": []
  }
}
